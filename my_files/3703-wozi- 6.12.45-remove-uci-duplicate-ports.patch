--- a/target/linux/mediatek/filogic/base-files/etc/board.d/02_network.orig	
+++ /dev/null
@@ -1,402 +0,0 @@
-
-. /lib/functions.sh
-. /lib/functions/uci-defaults.sh
-. /lib/functions/system.sh
-
-check_mt7531_p5() {
-    local compatible_path="$1"
-    local port5_path="$2"
-    local expected_compatible="$3"
-    local expected_port5="$4"
-
-	if [ ! -f "$compatible_path" ] || [ ! -f "$port5_path" ]; then
-		return
-	fi
-
-    local compatible=$(cat "$compatible_path")
-    local port5=$(cat "$port5_path")
-
-    # Check if the compatible string and port5 are as expected
-    if [ "$compatible" = "$expected_compatible" ] && [ "$port5" = "$expected_port5" ]; then
-        echo "mt7531_p5_exist"
-    else
-        echo "mt7531_p5_not_exist"
-    fi
-}
-
-mediatek_check_mt7531_P5() {
-    local gsw_result=$(check_mt7531_p5 "/proc/device-tree/gsw@0/compatible" \
-                                      "/proc/device-tree/gsw@0/port@5/compatible" \
-                                      "mediatek,mt753x" \
-                                      "mediatek,mt753x-port")
-
-    local dsa_result=$(check_mt7531_p5 "/proc/device-tree/soc_netsys/ethernet@15100000/mdio-bus/switch@31/compatible" \
-                                      "/proc/device-tree/soc_netsys/ethernet@15100000/mdio-bus/switch@31/ports/port@5/label" \
-                                      "mediatek,mt7531" \
-                                      "lan5")
-
-    if [ "$gsw_result" = "mt7531_p5_exist" ] || [ "$dsa_result" = "mt7531_p5_exist" ]; then
-        echo "p5_exist"
-    else
-        echo "p5_not_exist"
-    fi
-}
-
-mediatek_get_switch_type()
-{
-    # Base paths to the compatible and status properties
-    local dsa_base_path="/proc/device-tree/soc_netsys/ethernet@15100000/mdio-bus/*/"
-    local mt7531_dsa_base_path="/proc/device-tree/soc/switch*/"
-    local gsw_base_path="/proc/device-tree/gsw*/"
-
-    local dts_is_dsa=0
-    local dts_is_gsw=0
-
-    # Function to check compatible and status files
-    check_compatible_status() {
-        local dir=$1
-        local compatible_file="${dir}compatible"
-        local status_file="${dir}status"
-        local compatible=""
-        local status="disabled"
-
-        if [ -f "$compatible_file" ]; then
-            compatible=$(strings "$compatible_file" | head -1)
-        fi
-
-        if [ -f "$status_file" ]; then
-            status=$(tr -d '\0' < "$status_file")
-        fi
-
-        echo "$compatible" "$status"
-    }
-
-    # Iterate over each compatible property for external dsa switch
-    for dir in $dsa_base_path; do
-        if [ -d "$dir" ]; then
-            read compatible status < <(check_compatible_status "$dir")
-
-            if [ "$compatible" = "airoha,an8855-mfd" ] && [ "$status" = "okay" ]; then
-                dts_is_dsa=1
-            fi
-
-            if [ "$compatible" = "mediatek,mt7531" ] && [ "$status" = "okay" ]; then
-                dts_is_dsa=1
-            fi
-        fi
-    done
-
-    # Iterate over each compatible property for built-in mt7531-dsa
-    for dir in $mt7531_dsa_base_path; do
-        if [ -d "$dir" ]; then
-            read compatible status < <(check_compatible_status "$dir")
-
-            if [ "$compatible" = "mediatek,mt7988-switch" ] && [ "$status" = "okay" ]; then
-                dts_is_dsa=1
-            fi
-        fi
-    done
-
-    # Iterate over each compatible property for an8855-gsw and mt7531-gsw
-    for dir in $gsw_base_path; do
-        if [ -d "$dir" ]; then
-            read compatible status < <(check_compatible_status "$dir")
-
-            case $compatible in
-                airoha,an8855|\
-				mediatek,mt753x)
-                    if [ "$status" = "okay" ]; then
-                        dts_is_gsw=1
-                    fi
-                    ;;
-            esac
-        fi
-    done
-
-	# Sanity check for both dsa and gsw is true, always configure it to dsa
-    if [ "$dts_is_gsw" -gt 0 ] && [ "$dts_is_dsa" -eq 0 ]; then
-        echo "sw_is_gsw"
-    else
-        echo "sw_is_dsa"
-    fi
-}
-
-mediatek_setup_interfaces()
-{
-	local board="$1"
-
-	case $board in
-	abt,asr3000|\
-	cmcc,rax3000m|\
-	h3c,magic-nx30-pro|\
-	netis,nx31|\
-	nokia,ea0326gmp|\
-	mercusys,mr80x-v3|\
-	routerich,ax3000-v1|\
-	zbtlink,zbt-z8103ax)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3" eth1
-		;;
-	acelink,ew-7886cax)
-		ucidef_set_interface_lan "eth0" "dhcp"
-		;;
-	acer,predator-w6|\
-	acer,predator-w6d)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 game" eth1
-		;;
-	acer,predator-w6x)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4" eth1
-		;;
-	acer,vero-w6m)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3" internet
-		;;
-	arcadyan,mozart)
-		ucidef_set_interfaces_lan_wan "lan0 eth1" eth2
-		;;
-	asus,rt-ax52|\
-	asus,rt-ax59u|\
-	asus,zenwifi-bt8|\
-	asus,zenwifi-bt8-ubootmod|\
-	cetron,ct3003|\
-	cmcc,a10-stock|\
-	cmcc,a10-ubootmod|\
-	confiabits,mt7981|\
-	creatlentem,clt-r30b1|\
-	creatlentem,clt-r30b1-112m|\
-	cudy,wr3000-v1|\
-	jcg,q30-pro|\
-	keenetic,kn-3811|\
-	qihoo,360t7|\
-	routerich,ax3000|\
-	routerich,ax3000-ubootmod|\
-	tenbay,wr3000k)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3" wan
-		;;
-	asus,tuf-ax4200|\
-	iptime,ax3000sm|\
-	iptime,ax7800m-6e|\
-	jdcloud,re-cp-03|\
-	mediatek,mt7981-rfb|\
-	netcore,n60|\
-	netcore,n60-pro|\
-	nradio,c8-668gl|\
-	ruijie,rg-x60-pro|\
-	unielec,u7981-01*|\
-	zbtlink,zbt-z8102ax|\
-	zbtlink,zbt-z8102ax-v2)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4" eth1
-		;;
-	asus,tuf-ax6000|\
-	glinet,gl-mt6000|\
-	tplink,tl-xdr4288|\
-	tplink,tl-xdr6088|\
-	tplink,tl-xtr8488)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4 lan5" eth1
-		;;
-	bananapi,bpi-r3)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4 sfp2" "sfp1 wan"
-		;;
-	bananapi,bpi-r3-mini|\
-	edgecore,eap111|\
-	huasifei,wh3000|\
-	huasifei,wh3000-pro)
-		ucidef_set_interfaces_lan_wan eth0 eth1
-		;;
-	bananapi,bpi-r4)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 sfp-lan" "wan sfp-wan"
-		;;
-	bananapi,bpi-r4-2g5|\
-	bananapi,bpi-r4-poe)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4" "wan sfp-wan"
-		;;
-	comfast,cf-e393ax)
-		ucidef_set_interfaces_lan_wan "lan1" eth1
-		;;
-	cudy,ap3000outdoor-v1|\
-	cudy,ap3000-v1|\
-	cudy,re3000-v1|\
-	netgear,wax220|\
-	openfi,6c|\
-	ubnt,unifi-6-plus|\
-	wavlink,wl-wn573hx3|\
-	zyxel,nwa50ax-pro)
-		ucidef_set_interface_lan "eth0"
-		;;
-	cudy,m3000-v1|\
-	cudy,tr3000-256mb-v1|\
-	cudy,tr3000-v1|\
-	cudy,tr3000-v1-ubootmod|\
-	glinet,gl-mt2500|\
-	glinet,gl-mt3000|\
-	glinet,gl-x3000|\
-	glinet,gl-xe3000|\
-	openembed,som7981|\
-	openwrt,one)
-		ucidef_set_interfaces_lan_wan eth1 eth0
-		;;
-	dlink,aquila-pro-ai-m30-a1|\
-	dlink,aquila-pro-ai-m60-a1)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4" internet
-		;;
-	keenetic,kn-3911|\
-	smartrg,sdg-8622|\
-	smartrg,sdg-8632|\
-	smartrg,sdg-8733a|\
-	yuncore,ax835)
-		ucidef_set_interfaces_lan_wan lan wan
-		;;
-	mediatek,mt7986a-rfb)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4 lan6" "eth1 wan"
-		;;
-	mediatek,mt7986b-rfb)
-		ucidef_set_interfaces_lan_wan "lan0 lan1 lan2 lan3 lan4" eth1
-		;;
-	mediatek,mt7987a-spim-nand-cob*)
-		ucidef_set_interfaces_lan_wan "eth0 eth2" eth1
-		;;
-	mediatek,mt7988a-mxl86252-rfb*)
-		ucidef_set_interfaces_lan_wan "mxl_lan0 mxl_lan1 mxl_lan2 mxl_lan3 lan2 lan3" eth1
-		;;
-	mediatek,mt7987*|\
-	mediatek,mt7988*)
-		local sys_switch=$(mediatek_get_switch_type)
-		local sys_mt7531_p5=$(mediatek_check_mt7531_P5)
-		if [ "$sys_switch" = "sw_is_dsa" ]; then
-			if [ "$sys_mt7531_p5" = "p5_exist" ]; then
-				ucidef_set_interfaces_lan_wan "lan0 lan1 lan2 lan3 lan5 eth2" eth1
-			else
-				ucidef_set_interfaces_lan_wan "lan0 lan1 lan2 lan3 eth2" eth1
-			fi
-		else
-			ucidef_set_interfaces_lan_wan "eth0 eth2" eth1
-			if [ "$sys_mt7531_p5" = "p5_exist" ]; then
-				ucidef_add_switch "switch0" \
-					"0:lan" "1:lan" "2:lan" "3:lan" "5:lan" "6u@eth0"
-			else
-				ucidef_add_switch "switch0" \
-					"0:lan" "1:lan" "2:lan" "3:lan" "6u@eth0"
-			fi
-		fi
-		;;
-	mercusys,mr90x-v1|\
-	mercusys,mr90x-v1-ubi)
-		ucidef_set_interfaces_lan_wan "lan0 lan1 lan2" eth1
-		;;
-	tplink,fr365-v1)
-		ucidef_set_interfaces_lan_wan "port1 port3 port4 port5 port6" "port2"
-		;;
-	tplink,tl-xdr6086|\
-	wavlink,wl-wn551x3|\
-	wavlink,wl-wn586x3|\
-	wavlink,wl-wn586x3b)
-		ucidef_set_interfaces_lan_wan "lan1 lan2" eth1
-		;;
-	tplink,archer-ax80-v1)
-		ucidef_set_interfaces_lan_wan "lan0 lan1 lan2 lan3" eth1
-		;;
-	tplink,re6000xd)
-		ucidef_set_interface_lan "lan1 lan2 eth1"
-		;;
-	xiaomi,mi-router-ax3000t|\
-	xiaomi,mi-router-ax3000t-ubootmod|\
-	xiaomi,mi-router-wr30u-stock|\
-	xiaomi,mi-router-wr30u-ubootmod|\
-	xiaomi,redmi-router-ax6000-stock|\
-	xiaomi,redmi-router-ax6000-ubootmod)
-		ucidef_set_interfaces_lan_wan "lan2 lan3 lan4" wan
-		;;
-	*)
-		ucidef_set_interfaces_lan_wan "lan1 lan2 lan3 lan4" wan
-		;;
-	esac
-}
-
-mediatek_setup_macs()
-{
-	local board="$1"
-	local lan_mac=""
-	local wan_mac=""
-	local label_mac=""
-
-	case $board in
-	acer,predator-w6|\
-	acer,predator-w6d|\
-	acer,vero-w6m)
-		wan_mac=$(mmc_get_mac_ascii u-boot-env WANMAC)
-		lan_mac=$(mmc_get_mac_ascii u-boot-env LANMAC)
-		;;
-	acer,predator-w6x)
-		wan_mac=$(mtd_get_mac_ascii u-boot-env ethaddr)
-		lan_mac=$(macaddr_add "$wan_mac" 1)
-		label_mac=$wan_mac
-		;;
-	bananapi,bpi-r3|\
-	bananapi,bpi-r3-mini|\
-	bananapi,bpi-r4)
-		wan_mac=$(macaddr_add $(cat /sys/class/net/eth0/address) 1)
-		;;
-	h3c,magic-nx30-pro)
-		wan_mac=$(mtd_get_mac_ascii pdt_data_1 ethaddr)
-		lan_mac=$(macaddr_add "$wan_mac" 1)
-		label_mac=$wan_mac
-		;;
-	mercusys,mr80x-v3)
-		mac_dirty=$(cat "/tmp/tp_data/default-mac" | sed -n 's/^'"MAC"'://p')
-		label_mac=$(macaddr_canonicalize "$mac_dirty")
-		lan_mac=$label_mac
-		wan_mac=$(macaddr_add "$lan_mac" 1)
-		;;
-	mercusys,mr90x-v1|\
-	tplink,archer-ax80-v1|\
-	tplink,re6000xd)
-		label_mac=$(get_mac_binary "/tmp/tp_data/default-mac" 0)
-		lan_mac=$label_mac
-		;;
-	netgear,wax220)
-		lan_mac=$(mtd_get_mac_ascii u-boot-env mac)
-		label_mac=$lan_mac
-		;;
-	nradio,c8-668gl)
-		lan_mac=$(mmc_get_mac_ascii bdinfo "fac_mac ")
-		wan_mac=$(macaddr_add "$lan_mac" 2)
-		label_mac=$lan_mac
-		;;
-	qihoo,360t7)
-		lan_mac=$(mtd_get_mac_ascii factory lanMac)
-		wan_mac=$(macaddr_add "$lan_mac" 1)
-		label_mac=$wan_mac
-		;;
-	ruijie,rg-x60-pro)
-		label_mac=$(mtd_get_mac_ascii product_info ethaddr)
-		wan_mac=$label_mac
-		lan_mac=$(macaddr_add "$label_mac" 1)
-		;;
-	tplink,fr365-v1)
-		lan_mac=$(strings /dev/mtd11 | grep 'option macaddr' | awk -F"'" '{print $2}')
-		wan_mac="$(macaddr_add $lan_mac 1)"
-		;;
-	xiaomi,mi-router-ax3000t|\
-	xiaomi,mi-router-ax3000t-ubootmod|\
-	xiaomi,mi-router-wr30u-stock|\
-	xiaomi,mi-router-wr30u-ubootmod|\
-	xiaomi,redmi-router-ax6000-stock|\
-	xiaomi,redmi-router-ax6000-ubootmod)
-		wan_mac=$(mtd_get_mac_ascii Bdata ethaddr_wan)
-		label_mac=$wan_mac
-		;;
-	yuncore,ax835)
-		label_mac=$(mtd_get_mac_binary "Factory" 0x4)
-		;;
-	esac
-
-	[ -n "$lan_mac" ] && ucidef_set_interface_macaddr "lan" $lan_mac
-	[ -n "$wan_mac" ] && ucidef_set_interface_macaddr "wan" $wan_mac
-	[ -n "$label_mac" ] && ucidef_set_label_macaddr $label_mac
-}
-
-board_config_update
-board=$(board_name)
-mediatek_setup_interfaces $board
-mediatek_setup_macs $board
-board_config_flush
-
-exit 0
+ 
\ No newline at end of file
